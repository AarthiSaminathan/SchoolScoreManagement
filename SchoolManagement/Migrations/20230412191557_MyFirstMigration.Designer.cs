// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement;

#nullable disable

namespace SchoolManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230412191557_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SchoolManagement.Data.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StandardName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RollNo")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SportsInvolvement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StandardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Student_Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ScoreId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScoreId");

                    b.HasIndex("StudentId");

                    b.ToTable("Students_Scores");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Student", b =>
                {
                    b.HasOne("SchoolManagement.Data.Models.Standard", "Standard")
                        .WithMany("Students")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Student_Score", b =>
                {
                    b.HasOne("SchoolManagement.Data.Models.Score", "Score")
                        .WithMany("Student_Scores")
                        .HasForeignKey("ScoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Data.Models.Student", "Student")
                        .WithMany("Student_Scores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Score");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Score", b =>
                {
                    b.Navigation("Student_Scores");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Standard", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolManagement.Data.Models.Student", b =>
                {
                    b.Navigation("Student_Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
